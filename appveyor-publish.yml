version: '{build}'

branches:
  # blacklist
  except:
    - gh-pages

os: Visual Studio 2015

nuget:
  project_feed: true
  disable_publish_on_pr: true

notifications:
- provider: Webhook
  url: https://webhooks.gitter.im/e/f26eac97358590c8feca
  on_build_success: true
  on_build_failure: true
  on_build_status_changed: true

artifacts:
  - path: test.zip
    name: MyApp

  - path: bin\**\*.exe.xml
    name: GtestResults
    type: zip

build_script:
- ps: |
    msbuild /v:m /p:"Configuration=Release" /p:Platform="Win32" "vld_vs14.sln" /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
    if ($LastExitCode -gt 0)
    {
        Throw "msbuild exited with error code: $lastexitcode"
    }
    msbuild /v:m /p:"Configuration=Release" /p:Platform="x64" "vld_vs14.sln" /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
    if ($LastExitCode -gt 0)
    {
        Throw "msbuild exited with error code: $lastexitcode"
    }

test_script:
- ps: |
    cd src\

    function Add-GTest-Result($testResult)
    {
        $testsuites = ([xml](get-content $testResult)).testsuites
        $testsCount = 0
        $anyFailures = $FALSE

        foreach ($testsuite in $testsuites.testsuite) {
            foreach ($testcase in $testsuite.testcase) {
                $testsCount++
                if ($testcase.failure) {
                    $time = ([double]$testcase.time * 1000)
                    Add-AppveyorTest $testcase.name -Outcome Failed -FileName $testsuite.name -Duration $time -ErrorMessage $testcase.failure.message
                    Add-AppveyorMessage "$($testcase.name) failed" -Category Error
                    $anyFailures = $TRUE
                }
                elseif ($testcase.skipped) {
                    Add-AppveyorTest $testcase.name -Outcome Ignored -Filename $testsuite.name
                }
                else {
                    $time = ([double]$testcase.time * 1000)
                    Add-AppveyorTest $testcase.name -Outcome Passed -FileName $testsuite.name -Duration $time
                }
            }
        }
        return $testsCount, $anyFailures
    }

    function Run-Tests($platform, $configuration, $correctTestCount)
    {
        $testsCount = 0
        $anyFailures = $FALSE
        $tests_path = ".\bin\$platform\$configuration\"

        # Run tests and upload results to AppVeyor one by one
        Get-ChildItem "$tests_path\*.exe" | foreach {
            $testfile = "$($_.FullName).xml"
            & $_.FullName "--gtest_output=`"xml:$testfile`""
            if (Test-Path $testfile)
            {
                $count, $testsResult = Add-GTest-Result $testfile
                Write-Output "Found $testfile with $count tests"
                $testsCount = $testsCount + $count
                $anyFailures = $anyFailures -or $testsResult
            }
        }

        if ($anyFailures -eq $TRUE){
            Write-Output "Failing build as there are broken tests"
            $host.SetShouldExit(1)
        }

        if ($testsCount -lt $correctTestCount){
            Write-Output "Failing build as there the number of tests decreased from $correctTestCount"
            $host.SetShouldExit(2)
        }
    }

    $correctTestCount =  53
    Run-Tests "Win32" "Release-v140" $correctTestCount
    Run-Tests "x64" "Release-v140" $correctTestCount
    cd ..

after_test:
- ps: |
    nuget pack vld.nuspec -OutputDirectory src\bin
    Get-ChildItem src\bin\*.nupkg | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
